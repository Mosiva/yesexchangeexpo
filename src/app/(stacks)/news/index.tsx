import { Ionicons } from "@expo/vector-icons";
import { useRouter } from "expo-router";
import React, { useMemo, useState } from "react";
import {
    ScrollView,
    StatusBar,
    StyleSheet,
    Text,
    TextInput,
    TouchableOpacity,
    View,
} from "react-native";
import NewsMainCardList from "../../../components/NewsMainCardList.tsx";

const ORANGE = "#F58220";

type NewsItem = {
  id: string;
  title: string;
  excerpt: string;
  date: string; // "24.12.2024"
};

const TABS = ["YesNews", "Kase", "Zakon.kz"] as const;
type TabKey = (typeof TABS)[number];

const SAMPLE: Record<TabKey, NewsItem[]> = {
  YesNews: [
    {
      id: "yn1",
      title: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –≤–∞–ª—é—Ç–Ω–æ–º—É —Ä—ã–Ω–∫—É",
      excerpt:
        "–ü–æ –∏—Ç–æ–≥–∞–º –¥–µ–∫–∞–±—Ä—è –∫—É—Ä—Å —Ç–µ–Ω–≥–µ —É–∫—Ä–µ–ø–∏–ª—Å—è –Ω–∞ 1,3% –¥–æ 462,66 —Ç–µ–Ω–≥–µ –∑–∞ –¥–æ–ª–ª–∞—Ä –°–®–ê. –°—Ä–µ–¥...",
      date: "24.12.2024",
    },
    {
      id: "yn2",
      title: "–ö—É—Ä—Å —Ç–µ–Ω–≥–µ —É–∫—Ä–µ–ø–∏–ª—Å—è –∫ –¥–æ–ª–ª–∞—Ä—É",
      excerpt:
        "–ù–∞—Ü–±–∞–Ω–∫ —Å–æ–æ–±—â–∏–ª –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ—Ä–∏–¥–æ—Ä–∞ –∏ –ø–æ–≤—ã—à–µ–Ω–∏–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∫ –Ω–æ—Ç–∞–º. –î–æ–ª–ª–∞—Ä —Ç–µ—Ä—è–µ—Ç...",
      date: "20.12.2024",
    },
    {
      id: "yn3",
      title: "–ù–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –æ–±–º–µ–Ω–∞ –≤–∞–ª—é—Ç",
      excerpt:
        "–û–±–Ω–æ–≤–ª–µ–Ω—ã –ª–∏–º–∏—Ç—ã –Ω–∞–ª–∏—á–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤...",
      date: "15.12.2024",
    },
  ],
  Kase: [
    {
      id: "ka1",
      title: "KASE: –∏—Ç–æ–≥–∏ —Ç–æ—Ä–≥–æ–≤ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–π –≤–∞–ª—é—Ç–æ–π",
      excerpt:
        "–û–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –≤—ã—Ä–æ—Å, –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–µ—Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–≤ —É–≤–µ–ª–∏—á–∏–ª–∞—Å—å, —Å–ø—Ä–µ–¥ —Å—É–∑–∏–ª—Å—è...",
      date: "24.12.2024",
    },
  ],
  "Zakon.kz": [
    {
      id: "zk1",
      title: "–ú–∏–Ω—Ñ–∏–Ω –ø–æ—è—Å–Ω–∏–ª –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ –≤–∞–ª—é—Ç–Ω–æ–º —Ä—ã–Ω–∫–µ",
      excerpt:
        "–í–µ–¥–æ–º—Å—Ç–≤–æ –æ–∂–∏–¥–∞–µ—Ç —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ –∫—É—Ä—Å–æ–≤ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–ª—è—Ü–∏–∏ –≤ —Ü–µ–ª–µ–≤–æ–º –∫–æ—Ä–∏–¥–æ—Ä–µ...",
      date: "24.12.2024",
    },
  ],
};

export default function NewsScreen() {
  const router = useRouter();

  const [active, setActive] = useState<TabKey>("YesNews");
  const [query, setQuery] = useState("");

  const items = useMemo(() => {
    const src = SAMPLE[active];
    if (!query.trim()) return src;
    const q = query.toLowerCase();
    return src.filter(
      (n) =>
        n.title.toLowerCase().includes(q) || n.excerpt.toLowerCase().includes(q)
    );
  }, [active, query]);

  return (
    <View style={styles.container}>
      <StatusBar barStyle="dark-content" />
      <ScrollView
        contentContainerStyle={{ paddingHorizontal: 16, paddingBottom: 32 }}
        keyboardShouldPersistTaps="handled"
      >
        {/* Tabs */}
        <View style={styles.tabsRow}>
          {TABS.map((t) => {
            const focused = active === t;
            return (
              <TouchableOpacity
                key={t}
                onPress={() => setActive(t)}
                style={[styles.tab, focused && styles.tabActive]}
              >
                <Text style={[styles.tabText, focused && styles.tabTextActive]}>
                  {t}
                </Text>
              </TouchableOpacity>
            );
          })}
        </View>

        {/* Search */}
        <View style={styles.searchWrap}>
          <Ionicons
            name="search"
            size={20}
            color="#9CA3AF"
            style={{ marginRight: 8 }}
          />
          <TextInput
            value={query}
            onChangeText={setQuery}
            placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"
            placeholderTextColor="#9CA3AF"
            style={styles.searchInput}
            returnKeyType="search"
          />
        </View>

        {/* List */}
        <NewsMainCardList
          items={items.map((n) => ({
            id: n.id,
            title: n.title,
            summary: n.excerpt, // üëà —Ç–µ–ø–µ—Ä—å –ø–æ–ø–∞–¥—ë—Ç –≤ –Ω—É–∂–Ω–æ–µ –ø–æ–ª–µ
            date: n.date,
          }))}
          initial={3}
          onMorePress={() => {}}
          onDark={false}
        />
      </ScrollView>
    </View>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, backgroundColor: "#fff" },

  headerRow: {
    flexDirection: "row",
    alignItems: "center",
    paddingTop: 6,
    marginBottom: 6,
  },
  headerTitle: {
    flex: 1,
    textAlign: "center",
    fontSize: 28,
    fontWeight: "800",
    color: "#111827",
  },

  tabsRow: {
    flexDirection: "row",
    gap: 14,
    marginTop: 8,
    marginBottom: 12,
  },
  tab: {
    paddingHorizontal: 18,
    paddingVertical: 12,
    borderRadius: 12,
    backgroundColor: "#fff",
  },
  tabActive: {
    backgroundColor: "#F4F5F7",
    borderWidth: 1,
    borderColor: "#ECECEC",
  },
  tabText: { color: "#6B7280", fontSize: 14, fontWeight: "400" },
  tabTextActive: { color: "#111827" },

  searchWrap: {
    flexDirection: "row",
    alignItems: "center",
    borderWidth: 1,
    borderColor: "#ECECEC",
    borderRadius: 14,
    height: 52,
    paddingHorizontal: 12,
    marginBottom: 10,
  },
  searchInput: {
    flex: 1,
    fontSize: 16,
    fontWeight: "400",
    color: "#111827",
  },

  // (leftover shared styles you had)
  card: {
    flexDirection: "row",
    alignItems: "center",
    backgroundColor: "#fff",
    borderRadius: 16,
    borderWidth: 1,
    borderColor: "#ECECEC",
    paddingHorizontal: 14,
    paddingVertical: 16,
    marginTop: 14,
  },
  cta: {
    backgroundColor: ORANGE,
    borderRadius: 16,
    height: 56,
    alignItems: "center",
    justifyContent: "center",
    marginTop: 16,
  },
  ctaText: { color: "#fff", fontSize: 16, fontWeight: "700" },
});
