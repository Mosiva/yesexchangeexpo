import { useLocalSearchParams, useRouter } from "expo-router";
import {
  Image,
  Pressable,
  ScrollView,
  StyleSheet,
  Text,
  View,
} from "react-native";

const mockImages = [
  require("../../../../../assets/mock/itres.png"),
  require("../../../../../assets/mock/frres.png"),
];

export default function RestaurantDetail() {
  const { id, name, desc, discount, distance, hours } = useLocalSearchParams();
  const router = useRouter();

  return (
    <ScrollView style={styles.container}>
      {/* Image slider */}
      <ScrollView
        horizontal
        pagingEnabled
        showsHorizontalScrollIndicator={false}
        style={styles.slider}
        contentContainerStyle={styles.sliderContent}
      >
        {mockImages.map((img, index) => (
          <View key={index} style={styles.slideWrapper}>
            <Image source={img} style={styles.sliderImage} />
          </View>
        ))}
      </ScrollView>
      {/* Info Block */}
      <View style={styles.infoBlock}>
        <Text style={styles.name}>{name}</Text>
        <Text style={styles.desc}>{desc}</Text>
        <View style={styles.metaRow}>
          <Text style={styles.meta}>üïê {hours}</Text>
          <Text style={styles.meta}>üìç {distance}</Text>
          <Text style={styles.meta}>21+</Text>
        </View>
        <Text style={styles.longDesc}>
          –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {name}! –ó–¥–µ—Å—å –≤–∞—Å –∂–¥—É—Ç –∞–≤—Ç–æ—Ä—Å–∫–∏–µ –∫–æ–∫—Ç–µ–π–ª–∏, —à–∏—Ä–æ–∫–∏–π
          –≤—ã–±–æ—Ä –Ω–∞–ø–∏—Ç–∫–æ–≤ –∏ –∑–∞–∫—É—Å–æ–∫. –ê—Ç–º–æ—Å—Ñ–µ—Ä–∞ –Ω–∞—à–µ–≥–æ –±–∞—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è —Ç–æ–≥–æ,
          —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è, –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –æ—Ç–ª–∏—á–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏
          –≤—Ä–µ–º—è. –ë—É–¥—å —Ç–æ —à—É–º–Ω–∞—è –≤–µ—á–µ—Ä–∏–Ω–∫–∞ –∏–ª–∏ —Å–ø–æ–∫–æ–π–Ω—ã–π –≤–µ—á–µ—Ä –≤ –∫–æ–º–ø–∞–Ω–∏–∏ ‚Äî —É –Ω–∞—Å
          –≤—Å–µ–≥–¥–∞ –Ω–∞–π–¥—ë—Ç—Å—è –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–¥—ã—Ö–∞.
        </Text>
      </View>
      {/* Navigate Button */}
      <Pressable
        style={styles.navigateButton}
        onPress={() =>
          router.push({
            pathname: "/restaurants/[id]/reserve",
            params: { id: String(id), name: String(name) },
          })
        }
      >
        <Text style={styles.navigateText}>–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫</Text>
      </Pressable>
      {/* ID for debug/dev */}
      <Text style={styles.devInfo}>Restaurant ID: {id}</Text>
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    backgroundColor: "#fff",
    flex: 1,
  },
  infoBlock: {
    paddingHorizontal: 20,
  },
  name: {
    fontSize: 24,
    fontWeight: "bold",
    marginBottom: 6,
  },
  desc: {
    fontSize: 16,
    color: "#555",
    marginBottom: 10,
  },
  metaRow: {
    flexDirection: "row",
    justifyContent: "space-between",
  },
  meta: {
    fontSize: 14,
    color: "#777",
  },
  navigateButton: {
    backgroundColor: "#4F7942",
    marginTop: 24,
    marginHorizontal: 20,
    paddingVertical: 14,
    borderRadius: 10,
    alignItems: "center",
  },
  navigateText: {
    color: "#fff",
    fontWeight: "bold",
    fontSize: 16,
  },
  devInfo: {
    textAlign: "center",
    marginTop: 30,
    fontSize: 12,
    color: "#bbb",
  },
  longDesc: {
    marginTop: 16,
    fontSize: 15,
    lineHeight: 22,
    color: "#444",
  },
  slider: {
    height: 220,
    marginBottom: 20,
  },
  sliderContent: {
    paddingHorizontal: 20,
  },
  slideWrapper: {
    width: 320,
    height: 200,
    marginRight: 16,
    borderRadius: 16,
    overflow: "hidden",
    backgroundColor: "#eee",
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.1,
    shadowRadius: 6,
    elevation: 4,
  },
  sliderImage: {
    width: "100%",
    height: "100%",
    resizeMode: "cover",
  },
});
